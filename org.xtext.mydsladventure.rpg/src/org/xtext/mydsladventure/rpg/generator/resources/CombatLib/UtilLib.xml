<library>
  
  
  <!--
  As HasString, but will also return false if the string is empty.
  -->
  <function name="HasFullString" parameters="obj, att" type="boolean">
    if (not HasString(obj, att)) {
      return (false)
    }
    return (not (GetString(obj, att) = ""))
  </function>

  
  <!--
  Gets the level of the given object, or 0 if not set..
  -->
  <function name="GetLevel" parameters="obj" type="int">
    if (not HasInt(obj, "level")) return (0)
    return (obj.level)
  </function>
  

  <!--
  Deletes all items in the room "dead". Gets called when the player goes to a new level
  of the dungeon. Moving items to dead is therefore a way to get them destroyed
  without the issue of changing a list.
  -->
  <function name="PurgePurgatory">
    sl = NewStringList()
    foreach (o, GetDirectChildren(dead)) {
      list add (sl, o.name)
    }
    foreach (s, sl) {
      destroy (s)
    }
  </function>
  
  

  <!--   Random -->
  
  <!--
  Returns a string based on the input string, using text substitutions as the text
  processor.
  Additional these substitutions will be made:
  %gem%     a gem
  %metal%   a precious metal
  %stone%   an ornamental stone
  -->
  <function name="Randomise" parameters="s" type="string">
    data = NewDictionary()
    dictionary add (data, "fulltext", s)
    s = ProcessTextSection(s, data)
    s = Replace(s, "%gem%", PickOneString("ruby;sapphire;crystal;amethyst;emerald;diamond;opal;moonstone;chrysoberyl;garnet;jade;onyx;sunstone;topaz;tourmaline;turquoise"))
    s = Replace(s, "%metal%", PickOneString("electrum;gold;silver;white gold;crown gold;meteorite iron;mithril;adamantine;blood alloy"))
    s = Replace(s, "%stone%", PickOneString("alabaster;soapstone;chlorite;wonderstone;limestone;onyx;obsidian;marble;moonstone;coral;amber"))
    return (s)
  </function>
  

  <!--
  Randomly picks one monster from the given room.
  -->
  <function name="PickOneMonster" parameters="room" type="object">
    l = NewObjectList()
    foreach (o, GetDirectChildren(room)) {
      if (DoesInherit(o, "monster")) {
        list add (l, o)
      }
    }
    return (PickOneObject(l))
  </function>
    
  
  
  
</library>