// automatically generated by Xtext
grammar org.xtext.mydsladventure.rpg.RPG with org.eclipse.xtext.common.Terminals

import "platform:/resource/MyDSLAdventure/model/myDSLAdventure.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Game returns Game:
	{Game}
		gameTitle=STRING
		( gameElementLists+=GameElementList ( gameElementLists+=GameElementList)* )?
	;

GameElementList returns GameElementList:
	RoomList | ExitList | MonsterList | Player | WeaponList;



MonsterStatement returns MonsterStatement:
	Monster | MonsterPlacement | MonsterEquipment;


RoomList returns RoomList:
	{RoomList}
	'Rooms'
		( rooms+=Room ( rooms+=Room)* )?
	;

ExitList returns ExitList:
	'Ends' 'in'
		room+=[Room] ( "or" room+=[Room])*
	;

MonsterList returns MonsterList:
	{MonsterList}
	'Monsters'
		( monsterStatements+=MonsterStatement ( monsterStatements+=MonsterStatement)* )?
	;

Player returns Player:
	'Player' 'starts' 'in' startRoom=[Room]
		'with' healthPoints=EInt 'health'
		('and' weapon=[Weapon])?
	;

WeaponList returns WeaponList:
	{WeaponList}
	'Weapons'
		( weapons+=Weapon ( weapons+=Weapon)* )?
	;

Room returns Room:
	{Room}
	'Room' name=ID fullName=STRING
		'presentation' description=STRING
		('exits'
			exits+=Exit
			( exits+=Exit )*
		)?
		('actions'
			actions+=Action
			( actions+=Action )*
		)?
	;

Exit returns Exit:
	{Exit}
	'->'
		description=STRING
		'with' action=EString
		'goto' goto=[Room]
;

Action returns Action:
	{Action}
	'->'
		description=STRING
		'with' verb=STRING
;

Monster returns Monster:
	{Monster}
	'monster' name=ID fullName=STRING
		'with' health=EInt 'health'
		'attacks' 'for' baseDamage=EInt 'damage'
		'with' baseWeaponName=STRING
	;

MonsterPlacement returns MonsterPlacement:
	'put' monster=[Monster] 'in' room=[Room]
	;
	
MonsterEquipment returns MonsterEquipment:
	'give' monster=[Monster] 'weapon' weapon=[Weapon]
	;

Weapon returns Weapon:
	'weapon' name=ID fullName=STRING
		'attacks' 'for' damage=EInt 'damage'
	;

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;
